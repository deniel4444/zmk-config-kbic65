/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		default_layer {
			label = "Default";

			bindings = <
            &lt 3 GRAVE &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &kp N6    &kp N7    &kp N8  &kp N9    &kp N0    &kp MINUS &kp EQUAL       &kp BSPC &kp DEL          &kp ESC
            &kp TAB     &kp Q     &kp W     &kp E     &kp R     &kp T     &kp Y     &kp U     &kp I   &kp O     &kp P     &kp LBKT  &kp RBKT        &kp RET                   &kp DEL
            &lt 2 CLCK  &kp A     &kp S     &kp D     &kp F     &kp G     &kp H     &kp J     &kp K   &kp L     &kp SEMI  &kp SQT                            &kp NON_US_HASH  &kp PG_UP
            &kp LSHFT   &kp NUBS  &kp Z     &kp X     &kp C     &kp V     &kp B     &kp N     &kp M   &kp COMMA &kp DOT   &kp FSLH  &kp RSHFT                &kp UP           &kp PG_DOWN
            &kp LCTRL   &kp LGUI  &kp LALT                                &kp SPACE                             &kp RALT  &mo 1     &mt RCTRL K_APP &kp LEFT &kp DOWN         &kp RIGHT
			>;
		};
		function_layer {
			label = "Function";

			bindings = <
            &bootloader &bt BT_SEL 0 &bt BT_SEL 1 &trans       &trans		&trans 		 &trans       &trans        &trans           &trans            &trans    &trans    &trans     &trans     &trans       &trans
            &trans      &trans       &trans       &trans       &trans       &trans       &trans       &out OUT_USB  &ext_power EP_ON &ext_power EP_OFF &trans    &trans    &trans     &trans                  &trans
            &trans      &trans       &trans       &trans       &trans       &trans       &trans       &trans        &trans           &trans            &trans    &trans                          &trans       &trans
            &trans      &trans       &trans       &trans       &bt BT_CLR   &trans       &out OUT_BLE &trans        &kp C_MUTE       &trans            &trans    &trans    &trans                &kp C_VOL_UP &trans
            &trans      &trans       &trans                                              &kp C_PP                                                      &trans    &trans    &trans     &kp C_PREV &kp C_VOL_DN &kp C_NEXT
			>;
		};
		caps_mod_layer {
			label = "CapsMod";

			bindings = <
            &kp GRAVE  &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &kp F7    &kp F8    &kp F9    &kp F10    &kp F11    &kp F12      &trans      &trans       &trans
            &trans     &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans     &trans     &trans       &trans                   &kp GRAVE
            &trans     &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans     &trans                              &trans       &trans
            &trans     &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans    &trans     &trans     &trans                   &kp PG_UP    &trans
            &trans     &trans    &trans                                  &trans                                  &trans     &trans     &kp RCTRL    &kp HOME    &kp PG_DN    &kp END
			>;
		};
		tilde_mod_layer {
			label = "TildeMod";
			bindings = <
            &bootloader &bt BT_SEL 0 &bt BT_SEL 1 &trans       &trans		&trans 		 &trans       &trans        &trans           &trans            &trans    &trans    &trans     &trans     &trans       &trans
            &trans      &trans       &trans       &trans       &trans       &trans       &trans       &out OUT_USB  &ext_power EP_ON &ext_power EP_OFF &trans    &trans    &trans     &trans                  &trans
            &trans      &trans       &trans       &trans       &trans       &trans       &trans       &trans        &trans           &trans            &trans    &trans                          &trans       &trans
            &trans      &trans       &trans       &trans       &bt BT_CLR   &trans       &out OUT_BLE &trans        &kp C_MUTE       &trans            &trans    &trans    &trans                &kp C_VOL_UP &trans
            &trans      &trans       &trans                                              &kp C_PP                                                      &trans    &trans    &trans     &kp C_PREV &kp C_VOL_DN &kp C_NEXT
			>;
		};
	};
};
